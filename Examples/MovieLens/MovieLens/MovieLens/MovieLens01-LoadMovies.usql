// Load data from ADL file into tables. 
USE master;

CREATE ASSEMBLY ext FROM "MovieLensExtractor.dll";
REFERENCE ASSEMBLY ext;


DECLARE @INPUTDIR string =  "/movies/ml-1m/";
DECLARE @USERS string = @INPUTDIR + "users.dat";
DECLARE @MOVIES string = @INPUTDIR + "movies.dat";
DECLARE @RATINGS string = @INPUTDIR + "ratings.dat";

@UsersTemp =
    EXTRACT UserID string,
            Gender string,
            Age string,
            Occupation string,
            Zip string

    FROM @USERS
    USING new MovieLensExtractor.UserExtractor();


@MoviesTemp =
    EXTRACT MovieID string,
            MovieName string,
            Genres string
    FROM @MOVIES
    USING new MovieLensExtractor.MovieExtractor();

@m = SELECT *,new SQL.ARRAY<string>(
                Genres.Split('|')) AS Genre
     FROM @MoviesTemp;

@t = SELECT MovieID,MovieName,g AS Genre
     FROM @m CROSS APPLY EXPLODE(Genre) AS Genre(g);

@RatingsTemp = 
   EXTRACT UserID string,
           MovieID string,
           Rating string,
           TimeStamp string
      FROM @RATINGS
    USING new MovieLensExtractor.RatingsExtractor();
   
@j = 
    SELECT MovieID,AVG(float.Parse(Rating)) AS AvgRating,COUNT(*) AS RatingCount
    FROM @RatingsTemp AS r
    GROUP BY MovieID
    HAVING COUNT(*) > 75
    ORDER BY AvgRating DESC
    FETCH 100 ROWS         
;

@y =
    SELECT M.MovieID,
           M.MovieName,
           AvgRating,
           RatingCount
           
    FROM @j AS j
         JOIN
             @MoviesTemp AS M
         ON j.MovieID == M.MovieID;


OUTPUT @y
TO "foo4.out"
ORDER BY AvgRating DESC
USING Outputters.Csv()
;

    
OUTPUT @UsersTemp
TO "foo.out" USING Outputters.Csv();


OUTPUT @t
TO "foo2.out"
USING Outputters.Csv();

OUTPUT @RatingsTemp
TO "foo3.out"
USING Outputters.Csv();

      
